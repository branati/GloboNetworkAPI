# Generated by Django 4.2.4 on 2023-09-12 17:11

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ip', '0001_initial'),
        ('ambiente', '0001_initial'),
        ('api_pools', '0001_initial'),
        ('blockrules', '__first__'),
        ('healthcheckexpect', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='OptionVip',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tipo_opcao', models.CharField(db_column='tipo_opcao', max_length=50)),
                ('nome_opcao_txt', models.CharField(db_column='nome_opcao_txt', max_length=50)),
            ],
            options={
                'db_table': 'opcoesvip',
                'abstract': False,
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RequisicaoVips',
            fields=[
                ('id', models.AutoField(db_column='id_requisicao_vips', primary_key=True, serialize=False)),
                ('validado', models.BooleanField()),
                ('variaveis', models.TextField(blank=True)),
                ('vip_criado', models.BooleanField()),
                ('l7_filter', models.TextField(blank=True, db_column='l7_filter_to_apply', null=True)),
                ('filter_applied', models.TextField(blank=True, db_column='l7_filter_current', null=True)),
                ('filter_rollback', models.TextField(blank=True, db_column='l7_filter_rollback', null=True)),
                ('filter_valid', models.BooleanField(db_column='l7_filter_is_valid')),
                ('applied_l7_datetime', models.DateTimeField(blank=True, db_column='l7_filter_applied_datetime', null=True)),
                ('healthcheck_expect', models.ForeignKey(blank=True, db_column='id_healthcheck_expect', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='healthcheckexpect.healthcheckexpect')),
                ('ip', models.ForeignKey(blank=True, db_column='ips_id_ip', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='ip.ip')),
                ('ipv6', models.ForeignKey(blank=True, db_column='ipsv6_id_ipv6', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='ip.ipv6')),
                ('rule', models.ForeignKey(blank=True, db_column='id_rule', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rule', to='blockrules.rule')),
                ('rule_applied', models.ForeignKey(blank=True, db_column='id_rule_current', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rule_applied', to='blockrules.rule')),
                ('rule_rollback', models.ForeignKey(blank=True, db_column='id_rule_rollback', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rule_rollback', to='blockrules.rule')),
                ('trafficreturn', models.ForeignKey(blank=True, db_column='id_traffic_return', default=12, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='requisicaovips.optionvip')),
            ],
            options={
                'db_table': 'requisicao_vips',
                'abstract': False,
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ServerPool',
            fields=[
                ('id', models.AutoField(db_column='id_server_pool', primary_key=True, serialize=False)),
                ('identifier', models.CharField(db_column='identifier', max_length=200)),
                ('default_port', models.IntegerField(db_column='default_port')),
                ('default_limit', models.IntegerField(db_column='default_limit')),
                ('pool_created', models.BooleanField(db_column='pool_criado', default=False, null=True)),
                ('lb_method', models.CharField(db_column='lb_method', max_length=50)),
                ('environment', models.ForeignKey(db_column='ambiente_id_ambiente', on_delete=django.db.models.deletion.DO_NOTHING, to='ambiente.ambiente')),
                ('healthcheck', models.ForeignKey(db_column='healthcheck_id_healthcheck', default=1, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='healthcheckexpect.healthcheck')),
                ('servicedownaction', models.ForeignKey(db_column='service-down-action_id', default=5, on_delete=django.db.models.deletion.DO_NOTHING, to='api_pools.optionpool')),
            ],
            options={
                'db_table': 'server_pool',
                'abstract': False,
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='VipPortToPool',
            fields=[
                ('id', models.AutoField(db_column='id_vip_port_to_pool', primary_key=True, serialize=False)),
                ('port_vip', models.IntegerField(db_column='vip_port')),
                ('identifier', models.CharField(db_column='identifier', max_length=255, null=True)),
                ('requisicao_vip', models.ForeignKey(db_column='id_requisicao_vips', on_delete=django.db.models.deletion.DO_NOTHING, to='requisicaovips.requisicaovips')),
                ('server_pool', models.ForeignKey(db_column='id_server_pool', on_delete=django.db.models.deletion.DO_NOTHING, to='requisicaovips.serverpool')),
            ],
            options={
                'db_table': 'vip_port_to_pool',
                'abstract': False,
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ServerPoolMember',
            fields=[
                ('id', models.AutoField(db_column='id_server_pool_member', primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=200)),
                ('priority', models.IntegerField()),
                ('weight', models.IntegerField(db_column='weight')),
                ('limit', models.IntegerField()),
                ('port_real', models.IntegerField(db_column='port')),
                ('member_status', models.IntegerField(db_column='status', default=3)),
                ('last_status_update', models.DateTimeField(null=True)),
                ('healthcheck', models.ForeignKey(db_column='healthcheck_id_healthcheck', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='healthcheckexpect.healthcheck')),
                ('ip', models.ForeignKey(db_column='ips_id_ip', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='ip.ip')),
                ('ipv6', models.ForeignKey(db_column='ipsv6_id_ipv6', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='ip.ipv6')),
                ('server_pool', models.ForeignKey(db_column='id_server_pool', on_delete=django.db.models.deletion.DO_NOTHING, to='requisicaovips.serverpool')),
            ],
            options={
                'db_table': 'server_pool_member',
                'abstract': False,
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DsrL3_to_Vip',
            fields=[
                ('id', models.AutoField(db_column='id_dsrl3_to_vip', primary_key=True, serialize=False)),
                ('id_dsrl3', models.IntegerField(db_column='id_dsrl3')),
                ('requisicao_vip', models.ForeignKey(db_column='id_requisicao_vips', on_delete=django.db.models.deletion.DO_NOTHING, to='requisicaovips.requisicaovips')),
            ],
            options={
                'db_table': 'dsrl3_to_vip',
                'abstract': False,
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='OptionVipEnvironmentVip',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('environment', models.ForeignKey(db_column='id_ambiente', on_delete=django.db.models.deletion.DO_NOTHING, to='ambiente.environmentvip')),
                ('option', models.ForeignKey(db_column='id_opcoesvip', on_delete=django.db.models.deletion.DO_NOTHING, to='requisicaovips.optionvip')),
            ],
            options={
                'db_table': 'opcoesvip_ambiente_xref',
                'abstract': False,
                'managed': True,
                'unique_together': {('option', 'environment')},
            },
        ),
    ]
