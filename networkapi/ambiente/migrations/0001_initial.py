# Generated by Django 4.2.4 on 2023-09-12 17:11

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('filter', '__first__'),
        ('vlan', '__first__'),
        ('api_aws', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ambiente',
            fields=[
                ('id', models.AutoField(db_column='id_ambiente', primary_key=True, serialize=False)),
                ('acl_path', models.CharField(db_column='acl_path', max_length=250, null=True)),
                ('ipv4_template', models.CharField(db_column='ipv4_template', max_length=250, null=True)),
                ('ipv6_template', models.CharField(db_column='ipv6_template', max_length=250, null=True)),
                ('link', models.CharField(blank=True, max_length=200)),
                ('min_num_vlan_1', models.IntegerField(blank=True, db_column='min_num_vlan_1', null=True)),
                ('max_num_vlan_1', models.IntegerField(blank=True, db_column='max_num_vlan_1', null=True)),
                ('min_num_vlan_2', models.IntegerField(blank=True, db_column='min_num_vlan_2', null=True)),
                ('max_num_vlan_2', models.IntegerField(blank=True, db_column='max_num_vlan_2', null=True)),
                ('vrf', models.CharField(db_column='vrf', default='', max_length=100, null=True)),
                ('dcroom', models.IntegerField(blank=True, db_column='id_dcroom', null=True)),
                ('vxlan', models.BooleanField(blank=True, db_column='vxlan', default=False, null=True)),
            ],
            options={
                'db_table': 'ambiente',
                'abstract': False,
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AmbienteLogico',
            fields=[
                ('id', models.AutoField(db_column='id_ambiente_logic', primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'ambiente_logico',
                'abstract': False,
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DivisaoDc',
            fields=[
                ('id', models.AutoField(db_column='id_divisao', primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'divisao_dc',
                'abstract': False,
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EnvironmentVip',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('finalidade_txt', models.CharField(db_column='finalidade_txt', max_length=50)),
                ('cliente_txt', models.CharField(db_column='cliente_txt', max_length=50)),
                ('ambiente_p44_txt', models.CharField(db_column='ambiente_p44_txt', max_length=50)),
                ('description', models.CharField(db_column='description', max_length=50)),
                ('conf', models.TextField(db_column='conf', default='{"conf":{"keys":[],"layers":[],"optionsvip_extended":{}}}')),
            ],
            options={
                'db_table': 'ambientevip',
                'abstract': False,
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GrupoL3',
            fields=[
                ('id', models.AutoField(db_column='id_grupo_l3', primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'grupo_l3',
                'abstract': False,
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IPConfig',
            fields=[
                ('id', models.AutoField(db_column='id_ip_config', primary_key=True, serialize=False)),
                ('subnet', models.CharField(max_length=45)),
                ('new_prefix', models.CharField(max_length=3)),
                ('type', models.CharField(choices=[('v4', 'IPv4'), ('v6', 'IPv6')], max_length=2)),
                ('network_type', models.ForeignKey(db_column='network_type', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='vlan.tiporede')),
            ],
            options={
                'db_table': 'ip_config',
                'abstract': False,
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ConfigEnvironment',
            fields=[
                ('id', models.AutoField(db_column='id_config_do_ambiente', primary_key=True, serialize=False)),
                ('environment', models.ForeignKey(db_column='id_ambiente', on_delete=django.db.models.deletion.DO_NOTHING, to='ambiente.ambiente')),
                ('ip_config', models.ForeignKey(db_column='id_ip_config', on_delete=django.db.models.deletion.DO_NOTHING, to='ambiente.ipconfig')),
            ],
            options={
                'db_table': 'config_do_ambiente',
                'abstract': False,
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='ambiente',
            name='ambiente_logico',
            field=models.ForeignKey(db_column='id_ambiente_logic', on_delete=django.db.models.deletion.DO_NOTHING, to='ambiente.ambientelogico'),
        ),
        migrations.AddField(
            model_name='ambiente',
            name='aws_vpc',
            field=models.ForeignKey(db_column='id_aws_vpc', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api_aws.vpc'),
        ),
        migrations.AddField(
            model_name='ambiente',
            name='divisao_dc',
            field=models.ForeignKey(db_column='id_divisao', on_delete=django.db.models.deletion.DO_NOTHING, to='ambiente.divisaodc'),
        ),
        migrations.AddField(
            model_name='ambiente',
            name='father_environment',
            field=models.ForeignKey(db_column='id_father_environment', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='ambiente.ambiente'),
        ),
        migrations.AddField(
            model_name='ambiente',
            name='filter',
            field=models.ForeignKey(db_column='id_filter', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='filter.filter'),
        ),
        migrations.AddField(
            model_name='ambiente',
            name='grupo_l3',
            field=models.ForeignKey(db_column='id_grupo_l3', on_delete=django.db.models.deletion.DO_NOTHING, to='ambiente.grupol3'),
        ),
        migrations.CreateModel(
            name='EnvironmentEnvironmentVip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('environment', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ambiente.ambiente')),
                ('environment_vip', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ambiente.environmentvip')),
            ],
            options={
                'db_table': 'environment_environment_vip',
                'abstract': False,
                'managed': True,
                'unique_together': {('environment', 'environment_vip')},
            },
        ),
        migrations.CreateModel(
            name='EnvCIDR',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('network', models.CharField(db_column='network', max_length=44)),
                ('network_first_ip', models.CharField(db_column='network_first_ip', max_length=40)),
                ('network_last_ip', models.CharField(db_column='network_last_ip', max_length=40)),
                ('network_mask', models.CharField(max_length=3)),
                ('ip_version', models.CharField(choices=[('v4', 'IPv4'), ('v6', 'IPv6')], max_length=2)),
                ('subnet_mask', models.CharField(max_length=3)),
                ('id_env', models.ForeignKey(db_column='id_env', on_delete=django.db.models.deletion.DO_NOTHING, to='ambiente.ambiente')),
                ('id_network_type', models.ForeignKey(db_column='id_network_type', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='vlan.tiporede')),
            ],
            options={
                'db_table': 'environment_cidr',
                'abstract': False,
                'managed': True,
                'unique_together': {('id_env', 'network')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='ambiente',
            unique_together={('grupo_l3', 'ambiente_logico', 'divisao_dc')},
        ),
    ]
